{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/products/products.component.css","webpack:///./src/app/components/dashboard/products/products.component.html","webpack:///./src/app/components/dashboard/products/products.component.ts","webpack:///./src/app/components/dashboard/sidebar/admin-form/admin-form.component.css","webpack:///./src/app/components/dashboard/sidebar/admin-form/admin-form.component.html","webpack:///./src/app/components/dashboard/sidebar/admin-form/admin-form.component.ts","webpack:///./src/app/components/dashboard/sidebar/cart/cart.component.css","webpack:///./src/app/components/dashboard/sidebar/cart/cart.component.html","webpack:///./src/app/components/dashboard/sidebar/cart/cart.component.ts","webpack:///./src/app/components/dashboard/sidebar/cart/order-form/order-form.component.css","webpack:///./src/app/components/dashboard/sidebar/cart/order-form/order-form.component.html","webpack:///./src/app/components/dashboard/sidebar/cart/order-form/order-form.component.ts","webpack:///./src/app/components/dashboard/sidebar/sidebar.component.css","webpack:///./src/app/components/dashboard/sidebar/sidebar.component.html","webpack:///./src/app/components/dashboard/sidebar/sidebar.component.ts","webpack:///./src/app/components/main/auth/login/login.component.css","webpack:///./src/app/components/main/auth/login/login.component.html","webpack:///./src/app/components/main/auth/login/login.component.ts","webpack:///./src/app/components/main/auth/register/register.component.css","webpack:///./src/app/components/main/auth/register/register.component.html","webpack:///./src/app/components/main/auth/register/register.component.ts","webpack:///./src/app/components/main/main.component.css","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/components/main/notification-panel/notification-panel.component.css","webpack:///./src/app/components/main/notification-panel/notification-panel.component.html","webpack:///./src/app/components/main/notification-panel/notification-panel.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/page-not-found/page-not-found.component.css","webpack:///./src/app/components/page-not-found/page-not-found.component.html","webpack:///./src/app/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/pipes/filter.pipe.ts","webpack:///./src/app/pipes/highlight.pipe.ts","webpack:///./src/app/pipes/shorten.pipe.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/order.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/token-interceptor.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { AuthGuard } from \"./guards/auth.guard\";\n\nimport { MainComponent } from \"./components/main/main.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { LoginComponent } from \"./components/main/auth/login/login.component\";\nimport { RegisterComponent } from \"./components/main/auth/register/register.component\";\nimport { PageNotFoundComponent } from \"./components/page-not-found/page-not-found.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/\", pathMatch: \"full\" },\n  { path: \"\", component: MainComponent },\n  { path: \"dashboard\", component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"**\", component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\nexport const routingComponents = [\n  MainComponent,\n  DashboardComponent,\n  LoginComponent,\n  RegisterComponent,\n  PageNotFoundComponent\n];\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  constructor() {}\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AngularFontAwesomeModule } from \"angular-font-awesome\";\nimport { AppRoutingModule, routingComponents } from \"./app-routing.module\";\n// Services\nimport { AuthService } from \"./services/auth.service\";\nimport { TokenInterceptorService } from \"./services/token-interceptor.service\";\n// Guards\nimport { AuthGuard } from \"./guards/auth.guard\";\n// Components\nimport { AppComponent } from \"./app.component\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { SidebarComponent } from \"./components/dashboard/sidebar/sidebar.component\";\nimport { NotificationPanelComponent } from \"./components/main/notification-panel/notification-panel.component\";\nimport { ProductsComponent } from \"./components/dashboard/products/products.component\";\nimport { CartComponent } from \"./components/dashboard/sidebar/cart/cart.component\";\nimport { AdminFormComponent } from \"./components/dashboard/sidebar/admin-form/admin-form.component\";\nimport { OrderFormComponent } from \"./components/dashboard/sidebar/cart/order-form/order-form.component\";\n// Pipes\nimport { FilterPipe } from \"./pipes/filter.pipe\";\nimport { HighlightPipe } from \"./pipes/highlight.pipe\";\nimport { ShortenPipe } from \"./pipes/shorten.pipe\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SidebarComponent,\n    routingComponents,\n    NotificationPanelComponent,\n    ProductsComponent,\n    CartComponent,\n    OrderFormComponent,\n    AdminFormComponent,\n    FilterPipe,\n    HighlightPipe,\n    ShortenPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AngularFontAwesomeModule\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- spinner -->\\n<div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n  <span class=\\\"sr-only\\\">Loading...</span>\\n</div>\\n\\n<!-- dashboard -->\\n<div class=\\\"row mt-1\\\">\\n  <div class=\\\"mr-2 p-1\\\">\\n    <button class=\\\"btn btn-danger m-2\\\" (click)=\\\"isSidenavOpen = !isSidenavOpen\\\">\\n      <fa name=\\\"shopping-basket\\\"></fa>\\n    </button>\\n    <div *ngIf=\\\"isSidenavOpen\\\" class=\\\"col-md card m-2 p-1\\\">\\n      <app-sidebar [user]=\\\"user\\\"></app-sidebar>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md bg-light p-2\\\"><app-products [user]=\\\"user\\\"></app-products></div>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"dashboardModal\\\" [ngStyle]=\\\"{ display: display }\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header bg-dark text-white text-center\\\">\\n        <h4 class=\\\"modal-title\\\" [innerHTML]=\\\"modalHeader ? modalHeader : 'Success!'\\\"></h4>\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          &times;\\n        </button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"modalBody\\\" [innerHTML]=\\\"modalBody\\\"></div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\n// Services\nimport { AuthService } from \"src/app/services/auth.service\";\n// Models\nimport { User } from \"src/app/models/User\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\nexport class DashboardComponent implements OnInit {\n  isSidenavOpen: boolean = true;\n  isAuth: boolean = false;\n  user: User = null;\n  // modal & loading\n  isLoading: boolean = true;\n  display: string = \"none\";\n  modalHeader: string = \"\";\n  modalBody: string = \"\";\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    // import user data\n    this.authService.getCurrentUser().subscribe(\n      res => {\n        this.authService.userDetails(res.user);\n        this.authService.userOrdersDetails(res.orders[0]);\n        this.authService.currentUserData.subscribe(\n          user => ((this.user = user), (this.isLoading = false)),\n          err => this.onError()\n        );\n      },\n      err => this.onError()\n    );\n  }\n\n  // modal\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  onError() {\n    this.isLoading = false\n    this.modalHeader = \"An Error Has Occurred\";\n    this.modalBody = \"Could not load shopping section do to server communication problem. Please try again later.\";\n    this.openModal();\n  }\n}\n","module.exports = \"/* input[type=\\\"text\\\"] {\\n  width: 250px;\\n  box-sizing: border-box;\\n  border: 2px solid #ccc;\\n  border-radius: 10px;\\n  font-size: 12px;\\n  background-color: white;\\n  background-image: url(\\\"/assets/images/search.svg\\\");\\n  background-size: 20px;\\n  background-position: 10px 10px;\\n  background-repeat: no-repeat;\\n  padding: 10px 20px 10px 40px;\\n  -webkit-transition: width 0.4s ease-in-out;\\n  transition: width 0.4s ease-in-out;\\n}\\n\\ninput[type=\\\"text\\\"]:focus {\\n  outline: none;\\n  border: 2px solid rgb(248, 97, 97);\\n  width: 100%;\\n} */\\n\\n#quantity {\\n  width: 100px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkc7O0FBRUg7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9wcm9kdWN0cy9wcm9kdWN0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaW5wdXRbdHlwZT1cInRleHRcIl0ge1xuICB3aWR0aDogMjUwcHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9hc3NldHMvaW1hZ2VzL3NlYXJjaC5zdmdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogMjBweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTBweCAxMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCA0MHB4O1xuICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDAuNHMgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zaXRpb246IHdpZHRoIDAuNHMgZWFzZS1pbi1vdXQ7XG59XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDI0OCwgOTcsIDk3KTtcbiAgd2lkdGg6IDEwMCU7XG59ICovXG5cbiNxdWFudGl0eSB7XG4gIHdpZHRoOiAxMDBweDtcbn1cbiJdfQ== */\"","module.exports = \"<!-- spinner -->\\n<div *ngIf=\\\"isLoading\\\" class=\\\"text-center mb-2\\\">\\n  <div class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n</div>\\n<!-- search bar -->\\n<!-- fetching data from the server -->\\n<div class=\\\"input-group mb-2 mx-auto\\\" style=\\\"width:60%\\\">\\n  <input type=\\\"text\\\" #searchProducts class=\\\"form-control\\\" placeholder=\\\"Search for products...\\\" />\\n  <div class=\\\"input-group-append\\\">\\n    <button (click)=\\\"onSearch(searchProducts.value)\\\" class=\\\"btn btn-danger\\\"><fa name=\\\"search\\\"></fa></button>\\n  </div>\\n</div>\\n<!-- using pipe -->\\n<!-- <input type=\\\"text\\\" name=\\\"search\\\" class=\\\"mb-2\\\" placeholder=\\\"Search for products...\\\" [(ngModel)]=\\\"filteredStatus\\\" /> -->\\n\\n<!-- category bar -->\\n<div class=\\\"d-flex flex-wrap justify-content-center p-1 bg-light\\\">\\n  <button\\n    *ngFor=\\\"let category of categories\\\"\\n    (click)=\\\"onCategorySelected(category.cat_name)\\\"\\n    type=\\\"button\\\"\\n    class=\\\"px-2 m-2 btn btn-dark btn-sm\\\"\\n  >\\n    {{ category?.cat_name }}\\n  </button>\\n  <button type=\\\"button\\\" (click)=\\\"onShowAllProducts()\\\" class=\\\"px-2 m-2 btn btn-primary btn-sm\\\">\\n    Show All Products\\n  </button>\\n</div>\\n\\n<!-- products -->\\n<div *ngIf=\\\"products\\\" class=\\\"d-flex flex-wrap justify-content-center border\\\">\\n  <div *ngIf=\\\"products.length == 0\\\" class=\\\"text-center m-4\\\">\\n    <h3>There are no products</h3>\\n    <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"onShowAllProducts()\\\">Go back to full product list</button>\\n  </div>\\n\\n  <div\\n    *ngFor=\\\"let product of (products | filter: filteredStatus:'prod_name')\\\"\\n    class=\\\"card text-center m-1\\\"\\n    style=\\\"width:200px\\\"\\n    (click)=\\\"user?.role ? onProductEdit(product) : null\\\"\\n    [ngStyle]=\\\"user?.role && { cursor: 'pointer' }\\\"\\n  >\\n    <!-- spinner -->\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger mx-auto\\\" role=\\\"status\\\">\\n      <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n\\n    <img [src]=\\\"product.imageUrl\\\" [alt]=\\\"product.prod_name\\\" style=\\\"width:100%\\\" class=\\\"p-1\\\" />\\n    <small>Price: {{ product.price | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</small>\\n    <h6 class=\\\"card-title text-danger\\\">{{ product.prod_name }}</h6>\\n\\n    <!-- Button to Open the Modal -->\\n    <button\\n      *ngIf=\\\"!user?.role && !orderStatus\\\"\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-danger\\\"\\n      data-toggle=\\\"modal\\\"\\n      [attr.data-target]=\\\"'#Modal' + product.id\\\"\\n    >\\n      <fa name=\\\"plus-circle\\\" class=\\\"pr-2\\\"></fa>Add Product\\n    </button>\\n    <!-- The Modal -->\\n    <div class=\\\"modal\\\" [id]=\\\"'Modal' + product?.id\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <!-- Modal Header -->\\n          <div class=\\\"modal-header btn-danger\\\">\\n            <h4 class=\\\"modal-title\\\">{{ product.prod_name }}</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <!-- Modal form -->\\n          <form>\\n            <!-- Modal body -->\\n            <div class=\\\"modal-body d-flex flex-row justify-content-around align-content-center align-items-center\\\">\\n              <div class=\\\"p-1\\\" style=\\\"width:100px\\\">\\n                <img [src]=\\\"product.imageUrl\\\" [alt]=\\\"product.prod_name\\\" class=\\\"img-fluid img-thumbnail\\\" />\\n              </div>\\n              <div class=\\\"p-1\\\">\\n                <h6>Price /per unit</h6>\\n                {{ product.price | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}\\n              </div>\\n              <div class=\\\"p-1\\\">\\n                <h6>Quantity</h6>\\n                <input\\n                  id=\\\"quantity\\\"\\n                  [(ngModel)]=\\\"product.quantity\\\"\\n                  name=\\\"quantity\\\"\\n                  type=\\\"number\\\"\\n                  placeholder=\\\"0\\\"\\n                  min=\\\"0\\\"\\n                  class=\\\"form-control quantity-input\\\"\\n                />\\n              </div>\\n              <div class=\\\"p-1\\\">\\n                <h6>Total Price</h6>\\n                {{ product.price * product.quantity | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}\\n              </div>\\n            </div>\\n            <!-- Modal footer -->\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onAddProductToCart(product)\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\">\\n                <fa name=\\\"cart-plus\\\" class=\\\"mr-2\\\"></fa>Add to Cart\\n              </button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"myModal\\\" [ngStyle]=\\\"{ display: display }\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header bg-dark text-white text-center\\\">\\n        <h4 class=\\\"modal-title\\\" [innerHTML]=\\\"modalHeader ? modalHeader : 'Success!'\\\"></h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          &times;\\n        </button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"modalBody\\\" [innerHTML]=\\\"modalBody\\\"></div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n// Services\nimport { ProductService } from \"src/app/services/product.service\";\nimport { OrderService } from \"src/app/services/order.service\";\nimport { AuthService } from \"src/app/services/auth.service\";\n// Models\nimport { Product } from \"src/app/models/Product\";\nimport { Category } from \"src/app/models/Category\";\nimport { User } from \"src/app/models/User\";\n\n@Component({\n  selector: \"app-products\",\n  templateUrl: \"./products.component.html\",\n  styleUrls: [\"./products.component.css\"]\n})\nexport class ProductsComponent implements OnInit, OnChanges {\n  @Input() user: User;\n  filteredStatus: string = \"\";\n  products: Product[];\n  categories: Category[];\n  orderStatus: boolean = false;\n  currentProduct: Product;\n  // modal & loading\n  isLoading: boolean = true;\n  display: string = \"none\";\n  modalHeader: string = \"\";\n  modalBody: string = \"\";\n\n  constructor(\n    private productService: ProductService,\n    private orderService: OrderService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    // orders\n    this.orderService.currentOrderStatus.subscribe(res => (this.orderStatus = res), err => this.onError());\n    // products\n    this.productService.currentProducts.subscribe(products => (this.products = products), err => this.onError());\n    // categories\n    this.productService.currentCategories.subscribe(\n      categories => ((this.categories = categories), (this.isLoading = false)),\n      err => this.onError()\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // import product data\n    this.productService.getAllProducts().subscribe(\n      res =>\n        (this.products = res.products.map(product => {\n          return {\n            id: product._id,\n            prod_name: product.prod_name,\n            price: product.price,\n            imageUrl: product.imageUrl,\n            category: product.category.cat_name\n          };\n        })),\n      err => {\n        if (!err.status) this.onError();\n      }\n    );\n\n    // import categories\n    this.productService.getAllCategories().subscribe(\n      res =>\n        (this.categories = res.categories.map(category => {\n          return {\n            id: category._id,\n            cat_name: category.cat_name,\n            products: category.products\n          };\n        })),\n      err => {\n        if (!err.status) this.onError();\n      }\n    );\n  }\n\n  onSearch(productName) {\n    // http request for products by name or partial string, update products display\n    this.productService.getProductsByName(productName).subscribe(\n      res => {\n        this.isLoading = false;\n        this.productService.displayedProducts(\n          res.products.map(product => {\n            return {\n              id: product._id,\n              prod_name: product.prod_name,\n              price: product.price,\n              imageUrl: product.imageUrl,\n              category: product.category.cat_name\n            };\n          })\n        );\n      },\n      err => (this.isLoading = false)\n    );\n  }\n\n  onCategorySelected(categoryName) {\n    this.isLoading = true;\n    // http request for products by category, update products display\n    this.productService.getProductsByCategory(categoryName).subscribe(\n      res => {\n        this.isLoading = false;\n        this.productService.displayedProducts(\n          res.products.map(product => {\n            return {\n              id: product._id,\n              prod_name: product.prod_name,\n              price: product.price,\n              imageUrl: product.imageUrl,\n              category: categoryName\n            };\n          })\n        );\n      },\n      err => (this.isLoading = false)\n    );\n  }\n\n  onShowAllProducts() {\n    this.isLoading = true;\n    this.productService.getAllProducts().subscribe(res => {\n      this.isLoading = false;\n      this.productService.displayedProducts(\n        res.products.map(product => {\n          return {\n            id: product._id,\n            prod_name: product.prod_name,\n            price: product.price,\n            imageUrl: product.imageUrl,\n            category: product.category.cat_name\n          };\n        })\n      );\n    });\n  }\n\n  onAddProductToCart(product) {\n    if (product.quantity > 0) {\n      this.isLoading = true;\n      this.orderService.addProductToCart(this.user, product).subscribe(\n        res => {\n          this.isLoading = false;\n          this.authService.userDetails(res.user);\n          product.quantity = 0;\n        },\n        err => {\n          this.isLoading = false;\n          this.modalHeader = \"An Error Has Occurred\";\n          this.modalBody = \"Could not add product to cart. Please try again later.\";\n          this.openModal();\n        }\n      );\n    }\n  }\n\n  onProductEdit(product) {\n    this.productService.chosenProduct(product);\n  }\n\n  // modal\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  onError() {\n    this.isLoading = false;\n    this.modalHeader = \"An Error Has Occurred\";\n    this.modalBody = \"Could not display products do to server communication problem. Please try again later.\";\n    this.openModal();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3NpZGViYXIvYWRtaW4tZm9ybS9hZG1pbi1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <div class=\\\"d-flex px-1 mb-1 align-items-center\\\">\\n    <!-- spinner -->\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n      <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <h6 class=\\\"pl-2 mr-auto\\\">{{ mode == \\\"add\\\" ? \\\"Create Product\\\" : \\\"Edit Product\\\" }}</h6>\\n    <button (click)=\\\"onAddProduct()\\\" type=\\\"button\\\" class=\\\"btn btn-dark mr-1\\\"><fa name=\\\"plus\\\"></fa></button>\\n    <button (click)=\\\"onDeleteProduct()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\"><fa name=\\\"trash\\\"></fa></button>\\n  </div>\\n  <div *ngIf=\\\"!isHidden\\\" class=\\\"p-1\\\">\\n    <!-- product form -->\\n    <form #adminForm=\\\"ngForm\\\" (ngSubmit)=\\\"mode == 'add' ? onSaveNewProduct(adminForm) : onUpdateProduct(adminForm)\\\">\\n      <!-- warning -->\\n      <div *ngIf=\\\"isEmpty && !isOK\\\" class=\\\"alert alert-danger\\\">{{ warning }}</div>\\n      <div *ngIf=\\\"isEmpty && isOK\\\" class=\\\"alert alert-success\\\">{{ warning }}</div>\\n      <!-- warning -->\\n      <!-- product name -->\\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"text\\\"\\n          name=\\\"prod_name\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"prod_name\\\"\\n          [(ngModel)]=\\\"currentProduct.prod_name\\\"\\n          #prod_name=\\\"ngModel\\\"\\n          placeholder=\\\"Product Name\\\"\\n        />\\n      </div>\\n      <!-- image -->\\n      <div class=\\\"form-group\\\">\\n        <h6><small class=\\\"text-muted\\\">Please upload only files of type .JPEG, .JPG, or .PNG</small></h6>\\n        <input\\n          type=\\\"file\\\"\\n          (change)=\\\"onFileSelected($event)\\\"\\n          (click)=\\\"onFileSelected($event)\\\"\\n          style=\\\"display:none\\\"\\n          #pickedFile\\n        />\\n        <button type=\\\"button\\\" (click)=\\\"pickedFile.click()\\\" class=\\\"btn btn-dark\\\">\\n          <fa name=\\\"image\\\" class=\\\"mr-2\\\"></fa>Pick File\\n        </button>\\n        <span class=\\\"ml-3\\\">{{ selectedFile?.name | shorten: 15 }}</span>\\n      </div>\\n      <!-- price -->\\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"number\\\"\\n          name=\\\"price\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"price\\\"\\n          [(ngModel)]=\\\"currentProduct.price\\\"\\n          #price=\\\"ngModel\\\"\\n          placeholder=\\\"Price\\\"\\n        />\\n      </div>\\n      <!-- category -->\\n      <div class=\\\"form-group\\\">\\n        {{ selectedCategory }}\\n        <select\\n          type=\\\"text\\\"\\n          name=\\\"category\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"category\\\"\\n          [(ngModel)]=\\\"currentProduct.category ? currentProduct.category : initCategory\\\"\\n          #category=\\\"ngModel\\\"\\n        >\\n          <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category?.cat_name\\\">{{ category?.cat_name }}</option>\\n        </select>\\n      </div>\\n      <!-- submit button -->\\n      <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">{{ mode == \\\"add\\\" ? \\\"Add Product\\\" : \\\"Update Product\\\" }}</button>\\n    </form>\\n    <!-- category form -->\\n    <div class=\\\"card bg-light p-3 mt-3\\\">\\n      <form #categoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"onAddCategory(categoryForm)\\\">\\n        <div class=\\\"form-group\\\">\\n          <strong>Can't find the category you need?</strong><br />Add a new one to the scroll list!\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input\\n            type=\\\"text\\\"\\n            name=\\\"category_add\\\"\\n            id=\\\"category_add\\\"\\n            placeholder=\\\"New Category\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': category_add.errors && category_add.touched }\\\"\\n            ngModel\\n            #category_add=\\\"ngModel\\\"\\n            required\\n            minlength=\\\"2\\\"\\n          />\\n          <div [hidden]=\\\"!category_add.errors?.required\\\" class=\\\"invalid-feedback\\\">Category field is required</div>\\n          <div [hidden]=\\\"!category_add.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n            Category must be at least 2 characters\\n          </div>\\n        </div>\\n        <!-- submit button -->\\n        <button type=\\\"submit\\\" class=\\\"btn btn-warning\\\">Add Category</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnChanges, SimpleChanges } from \"@angular/core\";\n// Services\nimport { ProductService } from \"src/app/services/product.service\";\n// Models\nimport { Product } from \"src/app/models/Product\";\nimport { Category } from \"src/app/models/Category\";\n\n@Component({\n  selector: \"app-admin-form\",\n  templateUrl: \"./admin-form.component.html\",\n  styleUrls: [\"./admin-form.component.css\"]\n})\nexport class AdminFormComponent implements OnInit, OnChanges {\n  isHidden: boolean = true;\n  isEmpty: boolean = false;\n  isOK: boolean = false;\n  warning: string = \"\";\n  mode: string = \"add\";\n  categories: Category[];\n  currentProduct: Product = null;\n  isFileSelected: boolean = false;\n  selectedFile: any = null;\n  initCategory: string = \"Choose Category\";\n  isLoading: boolean = true;\n\n  constructor(private productService: ProductService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateCategories();\n    if (this.mode == \"add\") {\n      this.isHidden = false;\n      this.onClearForm();\n    }\n  }\n\n  ngOnInit() {\n    this.productService.currentProduct.subscribe(product => {\n      if (product) {\n        this.currentProduct = product;\n        this.mode = \"edit\";\n        this.isHidden = false;\n        this.isEmpty = false;\n      }\n    });\n    this.updateCategories();\n    if (this.categories !== undefined) this.initCategory = this.categories[0].cat_name;\n    this.isLoading = false;\n  }\n\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n    if (this.selectedFile)\n      if (\n        this.selectedFile.type !== \"image/jpeg\" &&\n        this.selectedFile.type !== \"image/jpg\" &&\n        this.selectedFile.type !== \"image/png\"\n      ) {\n        this.isFileSelected = true;\n        this.isEmpty = true;\n        this.isOK = false;\n        this.warning = \"File type is invalid\";\n      } else this.isEmpty = false;\n  }\n\n  onAddProduct() {\n    this.isHidden = false;\n    this.isOK = false;\n    this.onClearForm();\n  }\n\n  onSaveNewProduct(form) {\n    if (this.validateForm(form)) {\n      this.isEmpty = false;\n      let fd = new FormData();\n      fd.append(\"prod_name\", form.controls.prod_name.value);\n      fd.append(\"price\", form.controls.price.value);\n      fd.append(\"category\", form.controls.category.value);\n      fd.append(\"imageUrl\", this.selectedFile, this.selectedFile.name);\n      this.isLoading = true;\n      this.productService.createProduct(fd).subscribe(\n        res => {\n          this.isLoading = false;\n          this.updateProducts();\n          this.onClearForm();\n          this.isOK = true;\n          this.isEmpty = true;\n          this.warning = \"Product was successfully created\";\n        },\n        err => {\n          this.isLoading = false;\n          this.isEmpty = true;\n          this.isOK = false;\n          this.warning = \"Could not create new product\";\n        }\n      );\n    } else {\n      this.isOK = false;\n      this.isEmpty = true;\n    }\n  }\n\n  onUpdateProduct(form) {\n    if (this.validateForm(form)) {\n      this.isLoading = true;\n      this.isOK = false;\n      this.isEmpty = false;\n      let fd = new FormData();\n      if (this.selectedFile) fd.append(\"imageUrl\", this.selectedFile, this.selectedFile.name);\n      if (form.controls.price.value > 0) fd.append(\"price\", form.controls.price.value);\n      if (form.controls.prod_name.value && form.controls.prod_name.value.length > 1)\n        fd.append(\"prod_name\", form.controls.prod_name.value);\n      if (form.controls.category.value && form.controls.category.value.length > 1)\n        fd.append(\"category\", form.controls.category.value);\n      this.productService.editProduct(this.currentProduct.id, fd).subscribe(\n        res => {\n          this.isLoading = false;\n          this.isEmpty = true;\n          this.isOK = true;\n          this.updateProducts();\n          this.onClearForm();\n          this.warning = \"Product was successfully updated\";\n        },\n        err => {\n          this.isLoading = false;\n          this.isEmpty = true;\n          this.isOK = false;\n          this.warning = \"Could not update product\";\n        }\n      );\n    } else this.isEmpty = true;\n  }\n\n  onDeleteProduct() {\n    if (this.mode == \"edit\" && this.currentProduct) {\n      this.isLoading = true;\n      this.productService.deleteProduct(this.currentProduct.id).subscribe(\n        res => {\n          this.isLoading = false;\n          this.updateProducts();\n          this.isEmpty = true;\n          this.isOK = true;\n          this.warning = \"Product was successfully deleted\";\n        },\n        err => {\n          this.isLoading = false;\n          this.isEmpty = true;\n          this.isOK = false;\n          this.warning = \"Could not delete product\";\n        }\n      );\n    }\n    this.onClearForm();\n  }\n\n  onAddCategory(form) {\n    if (form.valid) {\n      this.isLoading = true;\n      this.productService.createCategory({ cat_name: form.controls.category_add.value }).subscribe(\n        res => {\n          this.isLoading = false;\n          this.updateCategories();\n          if (this.categories !== undefined) this.initCategory = this.categories[0].cat_name;\n          form.reset();\n        },\n        err => {\n          this.isLoading = false;\n          this.isEmpty = true;\n          this.isOK = false;\n          this.warning = \"Could not create new category\";\n        }\n      );\n    }\n  }\n\n  onClearForm() {\n    this.mode = \"add\";\n    this.currentProduct = { id: \"\", prod_name: \"\", price: null, category: \"\", imageUrl: \"\" };\n    this.selectedFile = null;\n    this.isEmpty = false;\n    this.isFileSelected = false;\n  }\n\n  validateForm(form) {\n    let prod_name = form.controls.prod_name.value,\n      price = form.controls.price.value,\n      category = form.controls.category.value;\n\n    if (this.mode == \"add\") {\n      if (!this.selectedFile) {\n        this.warning = \"Please upload an image\";\n        return false;\n      }\n      if (\n        this.selectedFile.type !== \"image/jpeg\" &&\n        this.selectedFile.type !== \"image/jpg\" &&\n        this.selectedFile.type !== \"image/png\"\n      ) {\n        this.warning = \"File type is invalid\";\n        return false;\n      }\n      if (form.pristine) {\n        this.warning = \"Please fill all required fields\";\n        return false;\n      }\n      if (((prod_name && !prod_name.trim()) || (category && !category.trim()) || price) && form.pristine) {\n        this.warning = \"Please fill all required fields\";\n        return false;\n      }\n      if (prod_name.length < 2 || form.controls.prod_name.pristine) {\n        this.warning = \"Product name must be at least 2 characters\";\n        return false;\n      }\n      if (category.length < 2) {\n        this.warning = \"Category must be at least 2 characters\";\n        return false;\n      }\n      if (category == \"Choose Category\") {\n        this.warning = \"Choose a category, if there are none create one\";\n        return false;\n      }\n      if (price == 0 || form.controls.price.pristine) {\n        this.warning = \"Product price must be higher then 0\";\n        return false;\n      }\n    }\n\n    if (this.mode == \"edit\") {\n      if (this.selectedFile) {\n        if (\n          this.selectedFile.type !== \"image/jpeg\" &&\n          this.selectedFile.type !== \"image/jpg\" &&\n          this.selectedFile.type !== \"image/png\"\n        ) {\n          this.warning = \"File type is invalid\";\n          return false;\n        }\n      }\n      if (!form.controls.prod_name.pristine && (prod_name && prod_name.trim()) && prod_name.length < 2) {\n        this.warning = \"Product name must be at least 2 characters\";\n        return false;\n      }\n      if (!form.controls.category.pristine && (category && category.trim()) && category.length < 2) {\n        this.warning = \"Category must be at least 2 characters\";\n        return false;\n      }\n      if (!form.controls.price.pristine && price !== null && price <= 0) {\n        this.warning = \"Product price must be higher then 0\";\n        return false;\n      }\n    }\n    return true;\n  }\n\n  updateProducts() {\n    this.isLoading = true;\n    this.productService.getAllProducts().subscribe(res => {\n      this.isLoading = false;\n      this.productService.displayedProducts(\n        res.products.map(product => {\n          return {\n            id: product._id,\n            prod_name: product.prod_name,\n            price: product.price,\n            imageUrl: product.imageUrl,\n            category: product.category.cat_name\n          };\n        })\n      );\n    });\n  }\n\n  updateCategories() {\n    this.productService.getAllCategories().subscribe(res => {\n      this.categories = res.categories.map(category => {\n        return {\n          id: category._id,\n          cat_name: category.cat_name,\n          products: category.products\n        };\n      });\n      this.productService.displayedCategories(this.categories);\n      this.categories.reverse();\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3NpZGViYXIvY2FydC9jYXJ0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- resume shopping -->\\n<div class=\\\"text-right p-1\\\">\\n  <button *ngIf=\\\"user?.cart.items.length > 0 && isOrdered\\\" (click)=\\\"onBackToShop()\\\" class=\\\"btn btn-danger\\\">\\n    <fa name=\\\"chevron-circle-left\\\" class=\\\"mr-2\\\"></fa>Back to shop\\n  </button>\\n</div>\\n<!-- spinner -->\\n<div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n  <span class=\\\"sr-only\\\">Loading...</span>\\n</div>\\n<!-- search products in receipt -->\\n<div class=\\\"px-1\\\">\\n  <input\\n    *ngIf=\\\"isOrdered\\\"\\n    type=\\\"text\\\"\\n    name=\\\"search\\\"\\n    class=\\\"form-control\\\"\\n    placeholder=\\\"Search for products on shopping cart\\\"\\n    [(ngModel)]=\\\"filteredStatus\\\"\\n  />\\n</div>\\n<!-- alerts -->\\n<!-- empty cart -->\\n<div class=\\\"alert alert-warning alert-dismissible\\\" *ngIf=\\\"user?.cart.items.length == 0\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n  <strong>Start shopping!</strong>\\n  <p>Add items to your cart.</p>\\n</div>\\n<!-- errors -->\\n<div class=\\\"alert alert-danger alert-dismissible\\\" *ngIf=\\\"isError\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>{{ errorBody }}\\n</div>\\n<!-- delete all products -->\\n<div class=\\\"text-right p-1\\\">\\n  <button\\n    *ngIf=\\\"user?.cart.items.length > 0 && !isOrdered && user?.cart.status !== 'pending'\\\"\\n    (click)=\\\"onEmptyCart()\\\"\\n    class=\\\"btn btn-dark\\\"\\n  >\\n    <fa name=\\\"trash\\\" class=\\\"mr-2\\\"></fa>Delete All Products\\n  </button>\\n</div>\\n<!-- items in cart -->\\n<div *ngIf=\\\"user?.cart.status !== 'closed'\\\" class=\\\"row p-1\\\">\\n  <div class=\\\"col\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let item of user?.cart.items\\\" class=\\\"list-group-item bg-light\\\">\\n        <div class=\\\"d-flex\\\">\\n          <div class=\\\"mr-auto\\\"><span [innerHTML]=\\\"item.prod_name | highlight: filteredStatus\\\"></span></div>\\n          <div>\\n            <span class=\\\"badge badge-dark mr-1\\\">Quantity: {{ item.quantity }}</span>\\n          </div>\\n          <div>\\n            <span class=\\\"badge badge-dark mr-1\\\">Price: {{ item.prod_total | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</span>\\n          </div>\\n          <div *ngIf=\\\"!isOrdered && (user?.cart.status == 'open' || user?.cart.status == 'new')\\\">\\n            <button (click)=\\\"onRemoveProductFromCart(item)\\\" class=\\\"btn badge badge-danger text-right\\\">\\n              <fa name=\\\"times\\\"></fa>\\n            </button>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n<!-- cart total -->\\n<div class=\\\"row p-1\\\">\\n  <div class=\\\"col\\\">\\n    <span class=\\\"btn btn-dark disabled\\\">Total: {{ total | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</span>\\n  </div>\\n  <!-- order -->\\n  <div *ngIf=\\\"(!isOrdered && user?.cart.status == 'open') || user?.cart.status == 'new'\\\" class=\\\"col text-right\\\">\\n    <button (click)=\\\"onOrder()\\\" class=\\\"btn btn-danger\\\" [disabled]=\\\"user?.cart.items.length == 0\\\">Order</button>\\n  </div>\\n</div>\\n<app-order-form *ngIf=\\\"isOrdered\\\" [user]=\\\"user\\\"></app-order-form>\\n\"","import { Component, OnInit, OnChanges, SimpleChanges, Input } from \"@angular/core\";\n// Srvices\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { OrderService } from \"src/app/services/order.service\";\n// Models\nimport { User } from \"src/app/models/User\";\n\n@Component({\n  selector: \"app-cart\",\n  templateUrl: \"./cart.component.html\",\n  styleUrls: [\"./cart.component.css\"]\n})\nexport class CartComponent implements OnInit, OnChanges {\n  @Input() user: User;\n  isOrdered: boolean = false;\n  total: number = 0;\n  filteredStatus: string = \"\";\n  isLoading: boolean = true;\n  isError: boolean = false;\n  errorBody: string = \"\";\n  constructor(private authService: AuthService, private orderService: OrderService) {}\n\n  ngOnInit() {\n    if (this.user) {\n      if (this.user.cart.status == \"pending\") this.isOrdered = true;\n      else if (this.user.cart.status == \"new\") this.isOrdered = false;\n      this.orderService.changeOrderStatus(this.isOrdered);\n    }\n    this.isLoading = false;\n    this.isError = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.user) {\n      this.total = 0;\n      this.user.cart.items.forEach(item => (this.total += item.prod_total));\n      if (this.user.cart.status == \"pending\") this.isOrdered = true;\n      else if (this.user.cart.status == \"new\") this.isOrdered = false;\n      this.orderService.changeOrderStatus(this.isOrdered);\n    }\n  }\n\n  onRemoveProductFromCart(product) {\n    this.isError = false;\n    this.isLoading = true;\n    this.orderService\n      .removeProductFromCart(this.user,product)\n      .subscribe(\n        res => ((this.isLoading = false), this.authService.userDetails(res.user)),\n        err => ((this.errorBody = \"Could not remove item from cart\"), (this.isError = true), (this.isLoading = false))\n      );\n  }\n\n  onEmptyCart() {\n    this.orderService\n      .emptyCart(this.user)\n      .subscribe(\n        res => ((this.isLoading = false), this.authService.userDetails(res.user)),\n        err => ((this.errorBody = \"Could not delete cart\"), (this.isError = true), (this.isLoading = false))\n      );\n  }\n\n  onBackToShop() {\n    this.isLoading = true;\n    this.orderService.revokeOrder(this.user).subscribe(\n      res => {\n        this.isLoading = false;\n        this.isOrdered = false;\n        this.orderService.changeOrderStatus(this.isOrdered);\n        this.authService.userDetails(res.user);\n      },\n      err => ((this.errorBody = \"Could not resume shopping\"), (this.isError = true), (this.isLoading = false))\n    );\n  }\n\n  onOrder() {\n    if (this.total > 0) {\n      this.isLoading = true;\n      this.orderService.initializeOrder(this.user).subscribe(\n        res => ((this.isLoading = false), (this.isOrdered = true), this.authService.userDetails(res.user)),\n        err => {\n          this.isOrdered = false;\n          this.isLoading = false;\n          this.errorBody = \"Could not proccess order\";\n          this.isError = true;\n        }\n      );\n    } else this.isOrdered = false;\n    this.orderService.changeOrderStatus(this.isOrdered);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3NpZGViYXIvY2FydC9vcmRlci1mb3JtL29yZGVyLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"mt-1 px-1\\\">\\n  <div class=\\\"card bg-light\\\">\\n    <div class=\\\"card-header bg-dark text-white\\\">Order Details</div>\\n    <div class=\\\"card-body\\\">\\n      <!-- spinner -->\\n      <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </div>\\n      <!-- form -->\\n      <form #orderForm=\\\"ngForm\\\" (ngSubmit)=\\\"onFinalizeOrder(orderForm)\\\" novalidate>\\n        <!-- warning -->\\n        <div *ngIf=\\\"isEmpty\\\" class=\\\"alert alert-danger\\\">{{ warning }}</div>\\n        <!-- warning -->\\n        <span><fa name=\\\"calendar\\\" class=\\\"mr-2\\\"></fa>Shipping Details</span>\\n        <hr />\\n        <!-- city -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"city\\\">Select city:</label>\\n          <select\\n            type=\\\"text\\\"\\n            name=\\\"city\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"city\\\"\\n            [(ngModel)]=\\\"user.city\\\"\\n            #city=\\\"ngModel\\\"\\n            required\\n          >\\n            <option *ngFor=\\\"let city of cities\\\" [ngValue]=\\\"city\\\">{{ city }}</option>\\n          </select>\\n        </div>\\n        <!-- street -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"street\\\">Street Address:</label>\\n          <input\\n            type=\\\"text\\\"\\n            name=\\\"street\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"street\\\"\\n            [ngClass]=\\\"{ 'is-invalid': street.errors && street.touched }\\\"\\n            [(ngModel)]=\\\"user.street\\\"\\n            #street=\\\"ngModel\\\"\\n            minlength=\\\"2\\\"\\n            required\\n          />\\n          <div [hidden]=\\\"!street.errors?.required\\\" class=\\\"invalid-feedback\\\">Street is required</div>\\n          <div [hidden]=\\\"!street.errors?.minlength\\\" class=\\\"invalid-feedback\\\">Address must be at least 2 characters</div>\\n        </div>\\n        <!-- shipping date -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"ship\\\">Shipping Date:</label>\\n          <input\\n            type=\\\"date\\\"\\n            name=\\\"ship\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"ship\\\"\\n            [ngClass]=\\\"{ 'is-invalid': ship.errors && ship.touched }\\\"\\n            [(ngModel)]=\\\"currentDate\\\"\\n            #ship=\\\"ngModel\\\"\\n            min=\\\"getCurrentDate()\\\"\\n            required\\n          />\\n          <div [hidden]=\\\"!street.errors?.required\\\" class=\\\"invalid-feedback\\\">Shipping date is required</div>\\n        </div>\\n        <span><fa name=\\\"credit-card\\\" class=\\\"mr-2\\\"></fa>Payments</span>\\n        <hr />\\n        <!-- credit card -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"credit\\\">Credit Card:</label>\\n          <input\\n            type=\\\"text\\\"\\n            name=\\\"credit\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"credit\\\"\\n            [ngClass]=\\\"{ 'is-invalid': credit.errors && credit.touched }\\\"\\n            ngModel\\n            #credit=\\\"ngModel\\\"\\n            placeholder=\\\"Enter credit card number\\\"\\n            minlength=\\\"16\\\"\\n            maxlength=\\\"16\\\"\\n            pattern=\\\"^[0-9]+$\\\"\\n            required\\n          />\\n          <div [hidden]=\\\"!credit.errors?.required\\\" class=\\\"invalid-feedback\\\">Credit card number is required</div>\\n          <div [hidden]=\\\"!credit.errors?.pattern\\\" class=\\\"invalid-feedback\\\">Credit card number is invalid</div>\\n          <div [hidden]=\\\"!credit.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n            Credit card number must contain 16 digits\\n          </div>\\n        </div>\\n        <!-- submit -->\\n        <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><fa name=\\\"check-circle\\\" class=\\\"mr-2\\\"></fa>Confirm & Pay</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"myModal\\\" [ngStyle]=\\\"{ display: display }\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header bg-dark text-white text-center\\\">\\n        <h4 class=\\\"modal-title\\\" [innerHTML]=\\\"modalHeader ? modalHeader : 'Order has been processed successfully!'\\\"></h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          &times;\\n        </button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"!modalBody\\\">\\n        <div class=\\\"text-center mx-auto\\\">\\n          <!-- spinner -->\\n          <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n          </div>\\n        </div>\\n        Click <button class=\\\"btn btn-danger\\\" (click)=\\\"download()\\\" routerLink=\\\"/\\\">here</button> to download receipt\\n      </div>\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"modalBody\\\" [innerHTML]=\\\"modalBody\\\"></div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\nimport * as jsPDF from \"jspdf\";\n// Services\nimport { OrderService } from \"src/app/services/order.service\";\nimport { AuthService } from \"src/app/services/auth.service\";\n// Models\nimport { User } from \"src/app/models/User\";\nimport { Order } from \"src/app/models/Order\";\n\n@Component({\n  selector: \"app-order-form\",\n  templateUrl: \"./order-form.component.html\",\n  styleUrls: [\"./order-form.component.css\"]\n})\nexport class OrderFormComponent implements OnInit {\n  @Input() user: User;\n  orders: Order[];\n  count = 0;\n  last = \"\";\n  currentDate: string = \"\";\n  cities: Array<String> = [\n    \"Mandya\",\n    \"Mysore\",\n    \"Hassan\",\n    \"Tumkur\",\n    \"Bangalore\",\n    \"Ramanagar\",\n    \"Bidar\",\n    \"Belgum\",\n    \"Hubli\"\n  ];\n  isEmpty: boolean = false;\n  warning: string = \"\";\n  // modal & loading\n  isLoading: boolean = true;\n  display: string = \"none\";\n  modalHeader: string = \"\";\n  modalBody: string = \"\";\n\n  constructor(private orderService: OrderService, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.currentDate = this.getCurrentDate(new Date());\n    this.isLoading = false;\n  }\n\n  onFinalizeOrder(form) {\n    this.isEmpty = false;\n    if (\n      !form.valid ||\n      !this.checkCreditCard(form.controls.credit.value) ||\n      !this.checkShipDate(form.controls.ship.value)\n    ) {\n      this.isEmpty = true;\n      this.warning = \"Please fill all required fields\";\n      if (!this.checkCreditCard(form.controls.credit.value) && form.valid)\n        this.warning = \"Credit cart number is invalid\";\n      if (!this.checkShipDate(form.controls.ship.value) && form.valid)\n        this.warning = \"Shipping date is invalid, must be current date or follow it\";\n      this.display = \"none\";\n    } else {\n      this.isLoading = true;\n      this.orderService.getAllOrders().subscribe(\n        res => {\n          this.isLoading = false;\n          // Booking validation\n          let ship = form.controls.ship.value,\n            takenDates = [],\n            isTaken = false,\n            orders = res.orders;\n          if (orders) {\n            const dates = orders.map(order => order.user.ship.toString().split(\"T\")[0]);\n            const allShipDates = dates.reduce((a, b) => {\n              if (a.indexOf(b) < 0) a.push(b);\n              return a;\n            }, []);\n            takenDates = allShipDates.filter(shipDate => dates.filter(date => date == shipDate).length > 2);\n            if (takenDates.length > 0) isTaken = takenDates.filter(date => date === ship).length > 0;\n            if (isTaken) {\n              this.warning = `Shipping on ${this.adjustDate(ship)} is already booked for 3 orders, pick another date`;\n              this.isEmpty = true;\n              this.display = \"none\";\n            } else\n              this.orderService\n                .addOrder(this.user,{\n                  city: form.controls.city.value,\n                  street: form.controls.street.value,\n                  ship: form.controls.ship.value,\n                  credit: form.controls.credit.value\n                })\n                .subscribe(\n                  res => {\n                    this.authService.userDetails(res.user);\n                    this.authService.currentUserData.subscribe(\n                      user => ((this.user = user), form.reset(), this.openModal()),\n                      err => this.onError()\n                    );\n                  },\n                  err => this.onError()\n                );\n          }\n        },\n        err => this.onError()\n      );\n    }\n  }\n\n  // download pdf receipt\n  download() {\n    this.isLoading = true;\n    this.authService.currentUserOrdersData.subscribe(\n      order => {\n        this.isLoading = false;\n        this.count++;\n        if (order && this.count == 2 && this.last !== order._id) {\n          this.last = order._id;\n          let orderDates = `Order date: ${this.adjustDate(\n              this.getCurrentDate(order.user.order)\n            )}\\tShipping date: ${this.adjustDate(this.getCurrentDate(order.user.ship))}`,\n            shipAddress = `Shipping address: ${order.user.street}, ${order.user.city}`,\n            userInfo = `[ ID: ${this.user.cardId} ] ${this.user.fname} ${this.user.lname}`,\n            itemsTXT = \"\";\n          order.products.forEach(\n            item =>\n              (itemsTXT += `${item.prod_name}\\tx ${item.quantity} units\\ttotal:  ${item.prod_total.toFixed(2)} ILS\\n\\n`)\n          );\n          let doc = new jsPDF();\n          doc.setFontSize(22);\n          doc.setFontStyle(\"bold\");\n          doc.text(\"Thank you for shopping at ngMarket\", 20, 20);\n          doc.setLineWidth(0.5);\n          doc.line(0, 25, 500, 25);\n          doc.setFontSize(12);\n          doc.setFontStyle(\"normal\");\n          doc.text(\"Order: \" + order._id, 10, 35);\n          doc.text(orderDates, 10, 45);\n          doc.text(shipAddress, 10, 55);\n          doc.text(\"Customer details: \" + userInfo, 10, 65);\n          doc.text(\"Credit card: ****-****-****-\" + order.user.credit.slice(-4), 10, 75);\n          doc.line(0, 80, 500, 80);\n          doc.setFontStyle(\"bold\");\n          doc.text(\"Total price: \" + order.total.toFixed(2) + \" ILS\", 10, 90);\n          doc.line(0, 95, 500, 95);\n          doc.setFontStyle(\"normal\");\n          doc.text(itemsTXT, 10, 105);\n          doc.save(\"receipt-\" + this.user.fname + \"-\" + this.user.lname + \"-\" + order._id + \".pdf\");\n        }\n      },\n      err => this.onError()\n    );\n  }\n\n  // modal\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  // shipping date validation\n  checkShipDate = ship => {\n    let shipDate = new Date(ship).getTime(),\n      orderDate = new Date(Date.now()).getTime();\n    if (\n      ship.match(/^[0-9]{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])/) &&\n      (shipDate >= orderDate || ship === new Date().toISOString().split(\"T\")[0])\n    )\n      return true;\n    else return false;\n  };\n  getCurrentDate = date => {\n    let today = new Date(date),\n      current = today.getFullYear().toString();\n    if (today.getMonth() + 1 < 10) current += \"-0\" + (today.getMonth() + 1);\n    else current += \"-\" + (today.getMonth() + 1);\n    if (today.getDate() < 10) current += \"-0\" + today.getDate();\n    else current += \"-\" + today.getDate();\n    return current;\n  };\n  adjustDate = date => {\n    let correct = date.slice(-2) + \"/\" + date.slice(5, -3) + \"/\" + date.slice(0, 4);\n    return correct;\n  };\n  // credit card validation\n  checkCreditCard = (function(credit) {\n    return function(ccNum) {\n      var len = ccNum.length,\n        bit = 1,\n        sum = 0,\n        val;\n      while (len) {\n        val = parseInt(ccNum.charAt(--len), 10);\n        sum += (bit ^= 1) ? credit[val] : val;\n      }\n      return sum && sum % 10 === 0;\n    };\n  })([0, 2, 4, 6, 8, 1, 3, 5, 7, 9]);\n\n  onError() {\n    this.modalHeader = \"An Error Has Occurred\";\n    this.modalBody = \"Could not proccess your order do to server communication problem. Please try again later.\";\n    this.openModal();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <!-- spinner -->\\n  <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n  <!-- User section -->\\n  <h5 *ngIf=\\\"user\\\" class=\\\"text-center text-danger mt-2\\\">\\n    {{ !user?.role ? \\\"My Shopping Cart\\\" : \\\"Administrator Panel\\\" }}\\n    <hr />\\n  </h5>\\n  <app-cart *ngIf=\\\"!user?.role\\\" [user]=\\\"user\\\"></app-cart>\\n  <!-- Admin section -->\\n  <app-admin-form *ngIf=\\\"user?.role\\\"></app-admin-form>\\n</div>\\n\"","import { Component, Input, OnInit } from \"@angular/core\";\n// Models\nimport { User } from \"src/app/models/User\";\n\n@Component({\n  selector: \"app-sidebar\",\n  templateUrl: \"./sidebar.component.html\",\n  styleUrls: [\"./sidebar.component.css\"]\n})\nexport class SidebarComponent implements OnInit {\n  @Input() user: User;\n  isLoading: boolean = true;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.isLoading = false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFpbi9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container card bg-light p-2 my-2\\\">\\n  <!-- spinner -->\\n  <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\"><span class=\\\"sr-only\\\">Loading...</span></div>\\n  <!-- form -->\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onLoginUser(loginForm)\\\" *ngIf=\\\"!isLoading\\\" novalidate>\\n    <p>Login</p>\\n    <div *ngIf=\\\"isEmpty\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>{{ warning }}\\n    </div>\\n    <!-- email -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        [ngClass]=\\\"{ 'is-invalid': emailInput.errors && emailInput.touched }\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"E-Mail\\\"\\n        ngModel\\n        #emailInput=\\\"ngModel\\\"\\n        required\\n        pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\"\\n      />\\n      <div [hidden]=\\\"!emailInput.errors?.required\\\" class=\\\"invalid-feedback\\\">Email is required</div>\\n      <div [hidden]=\\\"!emailInput.errors?.pattern\\\" class=\\\"invalid-feedback\\\">Email is not valid</div>\\n    </div>\\n    <!-- password -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        [ngClass]=\\\"{ 'is-invalid': passwordInput.errors && passwordInput.touched }\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Password\\\"\\n        ngModel\\n        #passwordInput=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"4\\\"\\n      />\\n      <div [hidden]=\\\"!passwordInput.errors?.required\\\" class=\\\"invalid-feedback\\\">Password is required</div>\\n      <div [hidden]=\\\"!passwordInput.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        Password must be at least 4 characters\\n      </div>\\n    </div>\\n    <!-- submit -->\\n    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Login</button>\\n  </form>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"loginModal\\\" [ngStyle]=\\\"{ display: display }\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header bg-dark text-white text-center\\\">\\n        <h4 class=\\\"modal-title\\\" [innerHTML]=\\\"modalHeader ? modalHeader : 'Success!'\\\"></h4>\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          &times;\\n        </button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"modalBody\\\" [innerHTML]=\\\"modalBody\\\"></div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgForm } from \"@angular/forms\";\n// Services\nimport { AuthService } from \"src/app/services/auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  isEmpty: boolean = false;\n  isAuth: boolean = false;\n  warning: string = \"\";\n  // modal & loading\n  isLoading: boolean = true;\n  display: string = \"none\";\n  modalHeader: string = \"\";\n  modalBody: string = \"\";\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.authService.currentAuthStatus.subscribe(auth => (this.isAuth = auth));\n    this.isLoading = false;\n  }\n\n  onLoginUser(form: NgForm) {\n    if (!form.valid) {\n      this.isEmpty = true;\n      this.warning = \"Please fill all required fields\";\n    } else {\n      this.isLoading = true;\n      let userLoginData = { email: form.controls.email.value, password: form.controls.password.value };\n      this.isEmpty = false;\n      this.authService.changeAuthStatus(true);\n      this.authService.loginUser(userLoginData).subscribe(\n        res => {\n          this.isLoading = false;\n          localStorage.setItem(\"token\", res.token);\n          this.authService.getCurrentUser().subscribe(res => this.authService.userDetails(res.user));\n          this.authService.userOrdersDetails(res.orders);\n          if (res.user.role === 0) this.router.navigate([\"/\"]);\n          if (res.user.role === 1) this.router.navigate([\"/dashboard\"]);\n        },\n        err => {\n          this.isLoading = false;\n          if (err.status) {\n            this.warning = \"Could not login user. Please make sure e-mail and password\";\n            this.isEmpty = true;\n          } else this.onError();\n        }\n      );\n      form.reset();\n    }\n  }\n\n  // modal\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  onError() {\n    this.modalHeader = \"An Error Has Occurred\";\n    this.modalBody = \"Could not login user do to server communication problem. Please try again later.\";\n    this.openModal();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFpbi9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container card bg-light p-2 my-2\\\">\\n  <!-- spinner -->\\n  <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\"><span class=\\\"sr-only\\\">Loading...</span></div>\\n  <!-- alert -->\\n  <div *ngIf=\\\"isEmpty\\\" class=\\\"alert alert-danger\\\">{{ warning }}</div>\\n  <!-- form 1 -->\\n  <form #registerForm1=\\\"ngForm\\\" (ngSubmit)=\\\"onStageOneComplete(registerForm1)\\\" *ngIf=\\\"!Register1\\\" novalidate>\\n    <p>Register</p>\\n    <!-- email / username -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"E-Mail\\\"\\n        [ngClass]=\\\"{ 'is-invalid': email.errors && email.touched }\\\"\\n        ngModel\\n        #email=\\\"ngModel\\\"\\n        required\\n        pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\"\\n      />\\n      <div [hidden]=\\\"!email.errors?.required\\\" class=\\\"invalid-feedback\\\">Email is required</div>\\n      <div [hidden]=\\\"!email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">Email is not valid</div>\\n    </div>\\n    <!-- password -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Password\\\"\\n        [ngClass]=\\\"{ 'is-invalid': password.errors && password.touched }\\\"\\n        ngModel\\n        #password=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"4\\\"\\n      />\\n      <div [hidden]=\\\"!password.errors?.required\\\" class=\\\"invalid-feedback\\\">Password is required</div>\\n      <div [hidden]=\\\"!password.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        Password must be at least 4 characters\\n      </div>\\n    </div>\\n    <!-- password confirmation -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"password\\\"\\n        name=\\\"password2\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Confirm Password\\\"\\n        [ngClass]=\\\"{ 'is-invalid': password2.errors && password2.touched }\\\"\\n        ngModel\\n        #password2=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"4\\\"\\n      />\\n      <div [hidden]=\\\"!password2.errors?.required\\\" class=\\\"invalid-feedback\\\">Password confirmation is required</div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Next<fa name=\\\"arrow-right\\\" class=\\\"ml-2\\\"></fa></button>\\n  </form>\\n  <!-- form 2 -->\\n  <form #registerForm2=\\\"ngForm\\\" (ngSubmit)=\\\"onRegisterUser(registerForm2)\\\" *ngIf=\\\"Register1\\\" novalidate>\\n    <p>Continue Registration</p>\\n    <!-- ID number -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"cardId\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"ID Number\\\"\\n        [ngClass]=\\\"{ 'is-invalid': cardId.errors && cardId.touched }\\\"\\n        ngModel\\n        #cardId=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"9\\\"\\n        maxlength=\\\"9\\\"\\n        pattern=\\\"^[0-9]+$\\\"\\n      />\\n      <div [hidden]=\\\"!cardId.errors?.required\\\" class=\\\"invalid-feedback\\\">ID number is required</div>\\n      <div [hidden]=\\\"!cardId.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        ID number must contain 9 digits\\n      </div>\\n      <div [hidden]=\\\"!cardId.errors?.pattern\\\" class=\\\"invalid-feedback\\\">ID number is invalid</div>\\n    </div>\\n    <!-- first name -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"fname\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"First Name\\\"\\n        [ngClass]=\\\"{ 'is-invalid': fname.errors && fname.touched }\\\"\\n        ngModel\\n        #fname=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"2\\\"\\n      />\\n      <div [hidden]=\\\"!fname.errors?.required\\\" class=\\\"invalid-feedback\\\">First name is required</div>\\n      <div [hidden]=\\\"!fname.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        First name must be at least 2 characters\\n      </div>\\n    </div>\\n    <!-- last name -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"lname\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Last Name\\\"\\n        [ngClass]=\\\"{ 'is-invalid': lname.errors && lname.touched }\\\"\\n        ngModel\\n        #lname=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"2\\\"\\n      />\\n      <div [hidden]=\\\"!lname.errors?.required\\\" class=\\\"invalid-feedback\\\">Last name is required</div>\\n      <div [hidden]=\\\"!lname.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        Last name must be at least 2 characters\\n      </div>\\n    </div>\\n    <!-- city -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"city\\\">Select city:</label>\\n      <select type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control\\\" id=\\\"city\\\" ngModel #city=\\\"ngModel\\\" required>\\n        <option *ngFor=\\\"let city of cities\\\" [ngValue]=\\\"city\\\">{{ city }}</option>\\n      </select>\\n    </div>\\n    <!-- street -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"street\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Street Address\\\"\\n        [ngClass]=\\\"{ 'is-invalid': street.errors && street.touched }\\\"\\n        ngModel\\n        #street=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"2\\\"\\n      />\\n      <div [hidden]=\\\"!street.errors?.required\\\" class=\\\"invalid-feedback\\\">Street is required</div>\\n      <div [hidden]=\\\"!street.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        Street must be at least 2 characters\\n      </div>\\n    </div>\\n    <!-- submit -->\\n    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Register</button>\\n  </form>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"registerModal\\\" [ngStyle]=\\\"{ display: display }\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header bg-dark text-white text-center\\\">\\n          <h4 class=\\\"modal-title\\\" [innerHTML]=\\\"modalHeader ? modalHeader : 'Success!'\\\"></h4>\\n          <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n            &times;\\n          </button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\" *ngIf=\\\"modalBody\\\" [innerHTML]=\\\"modalBody\\\"></div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n            Close\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgForm } from \"@angular/forms\";\n// Services\nimport { AuthService } from \"src/app/services/auth.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  isAuth: boolean = false;\n  isEmpty: boolean = false;\n  warning: string = \"\";\n  Register1: boolean = false;\n  cityHasError: boolean = false;\n  cities: Array<String> = [\n    \"Mandya\",\n    \"Mysore\",\n    \"Hassan\",\n    \"Tumkur\",\n    \"Bangalore\",\n    \"Ramanagar\",\n    \"Bidar\",\n    \"Belgum\",\n    \"Hubli\"\n  ];\n  userRegisterData = {\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    cardId: \"\",\n    fname: \"\",\n    lname: \"\",\n    city: \"\",\n    street: \"\"\n  };\n  // modal & loading\n  isLoading: boolean = true;\n  display: string = \"none\";\n  modalHeader: string = \"\";\n  modalBody: string = \"\";\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.isLoading = false;\n    this.authService.currentAuthStatus.subscribe(auth => (this.isAuth = auth));\n  }\n\n  onStageOneComplete(form1: NgForm) {\n    if (!form1.valid) {\n      this.isEmpty = true;\n      this.warning = \"Please fill all required fields\";\n    }\n    if (\n      form1.controls.password.value !== form1.controls.password2.value &&\n      form1.controls.password &&\n      form1.controls.password2\n    ) {\n      this.isEmpty = true;\n      this.warning = \"Passwords do not match\";\n    }\n    if (form1.controls.password.value == form1.controls.password2.value && form1.valid) {\n      this.isEmpty = false;\n      this.Register1 = true;\n      this.userRegisterData = {\n        ...this.userRegisterData,\n        email: form1.controls.email.value,\n        password: form1.controls.password.value,\n        password2: form1.controls.password2.value\n      };\n    }\n  }\n\n  validateCity(value) {\n    if (value === \"default\") this.cityHasError = true;\n    else this.cityHasError = false;\n  }\n\n  onRegisterUser(form2: NgForm) {\n    if (!form2.valid) {\n      this.isEmpty = true;\n      if (form2.controls.city.value == \"\") this.warning = \"City field is required\";\n      else this.warning = \"Please fill all required fields\";\n    } else {\n      this.isLoading = true;\n      this.isEmpty = false;\n      this.userRegisterData = {\n        ...this.userRegisterData,\n        cardId: form2.controls.cardId.value,\n        fname: form2.controls.fname.value,\n        lname: form2.controls.lname.value,\n        city: form2.controls.city.value,\n        street: form2.controls.street.value\n      };\n      this.authService.registerUser(this.userRegisterData).subscribe(\n        user => {\n          this.isLoading = false;\n          this.isEmpty = false;\n          this.router.navigate([\"/login\"]);\n        },\n        err => {\n          this.isLoading = false;\n          if (err.status) {\n            this.isEmpty = true;\n            this.warning = \"Could not register user\";\n            this.router.navigate([\"/register\"]);\n          } else this.onError();\n        }\n      );\n    }\n  }\n\n  // modal\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  onError() {\n    this.modalHeader = \"An Error Has Occurred\";\n    this.modalBody = \"Could not register user do to server communication problem. Please try again later.\";\n    this.openModal();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"col-md\\\" >\\n    <app-login></app-login>\\n    <app-register></app-register>\\n  </div>\\n  <div class=\\\"col-md border bg-light\\\" style=\\\"background-color: turquoise;\\\">\\n    <h1 class=\\\"text-danger text-center m-3\\\"><fa name=\\\" \\\" class=\\\"pr-2\\\"></fa>Online medical store</h1>\\n    <p class=\\\"m-4\\\">\\n      Online Medical Store It is a Online Pharmacy, ayurvedic store,Health Store \\n       Its a one stop shop that offers effective Medical products, healthcare solutions to all those\\n        individuals who are health enthusiasts\\n    </p>\\n    <p class=\\\"text-center\\\">\\n      <img\\n        src=\\\"./assets/images/medical.jpg\\\"\\n        class=\\\"img-fluid rounded border border-danger p-1\\\"\\n        alt=\\\"Products Info\\\"\\n      />\\n    </p>\\n  </div>\\n  <div class=\\\"col-md bg-dark p-4\\\">\\n    <p class=\\\"mx-4\\\"><img src=\\\"./assets/images/medical2.jpg\\\" class=\\\"img-fluid rounded\\\" alt=\\\"Products Info\\\" /></p>\\n    <!-- spinner -->\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n      <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"text-center text-white border rounded p-1 mx-5 my-4\\\">\\n      <span\\n        ><strong>{{ productsTotal }}</strong></span\\n      >\\n      products are now available in our store!<br />\\n      <span\\n        ><strong>{{ ordersTotal }}</strong></span\\n      >\\n      orders has been purchased on our site\\n    </div>\\n\\n    <div *ngIf=\\\"user\\\" class=\\\"text-center bg-warning border rounded p-1 mx-5\\\">\\n      <app-notification-panel [user]=\\\"user\\\"></app-notification-panel>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"mainModal\\\" [ngStyle]=\\\"{ display: display }\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header bg-dark text-white text-center\\\">\\n        <h4 class=\\\"modal-title\\\" [innerHTML]=\\\"modalHeader ? modalHeader : 'Success!'\\\"></h4>\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          &times;\\n        </button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"modalBody\\\" [innerHTML]=\\\"modalBody\\\"></div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\n// Services\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { ProductService } from \"src/app/services/product.service\";\n//Models\nimport { User } from \"src/app/models/User\";\nimport { Order } from \"src/app/models/Order\";\n\n@Component({\n  selector: \"app-main\",\n  templateUrl: \"./main.component.html\",\n  styleUrls: [\"./main.component.css\"]\n})\nexport class MainComponent implements OnInit {\n  isAuth: boolean = false;\n  user: User = null;\n  userOrders: Order = null;\n  productsTotal: number = 0;\n  ordersTotal: number = 0;\n  // modal & loading\n  isLoading: boolean = true;\n  display: string = \"none\";\n  modalHeader: string = \"\";\n  modalBody: string = \"\";\n\n  constructor(public authService: AuthService, private productService: ProductService) {}\n\n  ngOnInit() {\n    // import shop inventory\n    this.productService.getShopInventory().subscribe(\n      res => {\n        this.ordersTotal = res.ordersTotal;\n        this.productsTotal = res.productsTotal;\n        this.isLoading = false;\n        // import user data\n        this.authService.getCurrentUser().subscribe(res => {\n          this.authService.userDetails(res.user);\n          this.authService.userOrdersDetails(res.orders[0]);\n          this.authService.currentUserData.subscribe(\n            user => {\n              this.user = user;\n              this.authService.currentUserOrdersData.subscribe(\n                orders => (this.userOrders = orders),\n                err => this.onError()\n              );\n            },\n            err => this.onError()\n          );\n        });\n      },\n      err => this.onError()\n    );\n  }\n\n  // modal\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  onError() {\n    this.isLoading=false\n    this.modalHeader = \"An Error Has Occurred\";\n    this.modalBody = \"Could not load ngMarket orders & product information do to server communication problem. Please try again later.\";\n    this.openModal();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFpbi9ub3RpZmljYXRpb24tcGFuZWwvbm90aWZpY2F0aW9uLXBhbmVsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- spinner -->\\n<div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\"><span class=\\\"sr-only\\\">Loading...</span></div>\\n<!-- regular user -->\\n<div *ngIf=\\\"!user?.role\\\">\\n  <div *ngIf=\\\"user?.cart.status == 'new'\\\">\\n    <h5>Hello {{ user?.fname }}!</h5>\\n    <p>Ready to begin your first purchase?</p>\\n  </div>\\n  <div *ngIf=\\\"user?.cart.status !== 'new'\\\">\\n    <h5>Welcome Back {{ user?.fname }}!</h5>\\n    <!-- pending cart -->\\n    <div *ngIf=\\\"user?.cart.status == 'open' || user?.cart.status == 'pending'\\\">\\n      <p>\\n        You have an open cart from <strong>{{ user?.cart.created | date: \\\"medium\\\" }}</strong>\\n      </p>\\n      <p>for total amount of {{ total | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</p>\\n    </div>\\n    <!-- closed cart -->\\n    <p *ngIf=\\\"user?.cart.status == 'closed'\\\">\\n      Your last purchase was on <strong>{{ orders?.user.order | date: \\\"medium\\\" }}</strong>\\n    </p>\\n  </div>\\n  <button class=\\\"btn btn-danger mb-2\\\" routerLink=\\\"/dashboard\\\">Start Shopping</button>\\n  <!-- view last purchase -->\\n  <div *ngIf=\\\"user?.cart.status == 'closed'\\\" class=\\\"mt-1\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-dark btn-block\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#demo\\\">\\n      View Last Purchase\\n    </button>\\n    <div id=\\\"demo\\\" class=\\\"collapse p-1\\\">\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th>Product</th>\\n            <th>Quantity</th>\\n            <th>Total</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let product of orders?.products\\\">\\n            <td>{{ product?.prod_name }}</td>\\n            <td>{{ product?.quantity }}</td>\\n            <td>{{ product?.prod_total | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <strong>For total amount of: {{ orders?.total | currency: \\\"ILS\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</strong>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- admin -->\\n<div *ngIf=\\\"user?.role\\\">\\n  <h5>Hello Administrator</h5>\\n  <button class=\\\"btn btn-danger mb-2\\\" routerLink=\\\"/dashboard\\\">Back to Administrator Panel</button>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"notificationPanelModal\\\" [ngStyle]=\\\"{ display: display }\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header bg-dark text-white text-center\\\">\\n        <h4 class=\\\"modal-title\\\" [innerHTML]=\\\"modalHeader ? modalHeader : 'Success!'\\\"></h4>\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          &times;\\n        </button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"modalBody\\\" [innerHTML]=\\\"modalBody\\\"></div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onCloseHandled()\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" routerLink=\\\"/\\\">\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit, OnChanges, SimpleChanges } from \"@angular/core\";\n// Services\nimport { AuthService } from \"src/app/services/auth.service\";\n// Models\nimport { Order } from \"src/app/models/Order\";\nimport { User } from \"src/app/models/User\";\n\n@Component({\n  selector: \"app-notification-panel\",\n  templateUrl: \"./notification-panel.component.html\",\n  styleUrls: [\"./notification-panel.component.css\"]\n})\nexport class NotificationPanelComponent implements OnInit, OnChanges {\n  @Input() user: User;\n  orders: Order[];\n  total: number = 0;\n  // modal & loading\n  isLoading: boolean = true;\n  display: string = \"none\";\n  modalHeader: string = \"\";\n  modalBody: string = \"\";\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    // import user data\n    this.authService\n      .getCurrentUser()\n      .subscribe(res => (this.authService.userDetails(res.user), this.authService.userOrdersDetails(res.orders[0])));\n    this.authService.currentUserData.subscribe(user => (this.user = user));\n    this.authService.currentUserOrdersData.subscribe(orders => (this.orders = orders));\n    this.isLoading = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.total = 0;\n    this.user.cart.items.forEach(item => (this.total += item.prod_total));\n  }\n\n  // modal\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  onError() {\n    this.isLoading = false;\n    this.modalHeader = \"An Error Has Occurred\";\n    this.modalBody =\n      \"Could not show user purchases & cart info do to server communication problem. Please try again later.\";\n    this.openModal();\n  }\n}\n","module.exports = \".body{\\r\\n    background-color: blue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib2R5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxufSJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-danger\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- spinner -->\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-light\\\" role=\\\"status\\\">\\n      <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <!-- Navbar title -->\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\">\\n      <fa name=\\\"\\\" class=\\\"pr-2\\\"></fa>online medical store</a\\n    >\\n    <!-- Navbar collapse button -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#mobile-nav\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <!-- links -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"mobile-nav\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\">Shop Now!</a>\\n        </li>\\n      </ul>\\n      <!-- shop info -->\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\"\\n            ><span class=\\\"badge badge-dark mr-1\\\"> <fa name=\\\"phone\\\" class=\\\"pr-2\\\"></fa>95383511</span></a\\n          >\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"mailto:ng-market@mail.com\\\" routerLinkActive=\\\"active\\\"\\n            ><span class=\\\"badge badge-dark\\\"> <fa name=\\\"envelope\\\" class=\\\"pr-2\\\"></fa>medical@mail.com</span></a\\n          >\\n        </li>\\n        <!-- Login/ Register/ Logout -->\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\n        </li>\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n        </li>\\n        <li *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"logout()\\\" class=\\\"nav-item\\\" style=\\\"cursor:pointer\\\">\\n          <a class=\\\"nav-link\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"src/app/services/auth.service\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  isLoading: boolean = true;\n\n  constructor(public authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.isLoading = false;\n  }\n\n  logout() {\n    this.authService.logoutUser();\n    this.authService.userDetails(null);\n    this.router.navigate[\"/\"];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS1ub3QtZm91bmQvcGFnZS1ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"text-center p-5\\\">\\n  <!-- spinner -->\\n  <div *ngIf=\\\"isLoading\\\" class=\\\"spinner-border text-danger\\\" role=\\\"status\\\"><span class=\\\"sr-only\\\">Loading...</span></div>\\n  <h1>404</h1>\\n  <img src=\\\"./assets/images/frown-solid.svg\\\" class=\\\"img-fluid\\\" style=\\\"width:100px;\\\" alt=\\\"404\\\" />\\n  <p class=\\\"mt-3\\\">It apears the page you are looking for does not exist</p>\\n  <p class=\\\"mt-2\\\">\\n    Click here to\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\"> redirect<fa name=\\\"undo\\\" class=\\\"ml-2\\\"></fa></a>\\n  </p>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-page-not-found\",\n  templateUrl: \"./page-not-found.component.html\",\n  styleUrls: [\"./page-not-found.component.css\"]\n})\nexport class PageNotFoundComponent implements OnInit {\n  isLoading: boolean = true;\n\n  constructor() {}\n  \n  ngOnInit() {\n    this.isLoading = false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthGuard implements CanActivate {\n  constructor(private _authService: AuthService, private _router: Router) {}\n\n  canActivate(): boolean {\n    if (this._authService.loggedIn()) {\n      return true;\n    } else {\n      this._router.navigate([\"/\"]);\n      return false;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({ name: \"filter\" })\nexport class FilterPipe implements PipeTransform {\n  transform(value: any, filterString: string, propName: string): any {\n    if (value.length === 0 || filterString === \"\") return value;\n    const resultArray = [];\n    for (const item of value) {\n      if (item[propName].toLowerCase().includes(filterString.toLowerCase())) resultArray.push(item);\n    }\n    return resultArray;\n  }\n}\n","import { PipeTransform, Pipe } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\n@Pipe({ name: \"highlight\" })\nexport class HighlightPipe implements PipeTransform {\n  constructor(public sanitizer: DomSanitizer) {}\n  transform(text: string, search): SafeHtml {\n    if (search && text) {\n      let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n      pattern = pattern\n        .split(\" \")\n        .filter(t => {\n          return t.length > 0;\n        })\n        .join(\"|\");\n      const regex = new RegExp(pattern, \"gi\");\n      return this.sanitizer.bypassSecurityTrustHtml(\n        text.replace(regex, match => `<span style='background-color:yellow'>${match}</span>`)\n      );\n    } else return text;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({ name: \"shorten\" })\nexport class ShortenPipe implements PipeTransform {\n  transform(value: any, limit: number) {\n    if (value) if (value.length > limit) return value.substr(0, limit) + \"... .\" + value.split(\".\").pop();\n    return value;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthService {\n  private url: string = \"http://localhost:5000/user/\";\n\n  private authStatus = new BehaviorSubject(false);\n  currentAuthStatus = this.authStatus.asObservable();\n  private userData = new BehaviorSubject(null);\n  currentUserData = this.userData.asObservable();\n  private userOrdersData = new BehaviorSubject(null);\n  currentUserOrdersData = this.userOrdersData.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  changeAuthStatus(auth) {\n    this.authStatus.next(auth);\n  }\n\n  userDetails(user) {\n    this.userData.next(user);\n  }\n\n  userOrdersDetails(orders) {\n    this.userOrdersData.next(orders);\n  }\n\n  registerUser(user) {\n    return this.http.post<any>(this.url + \"register\", user);\n  }\n\n  loginUser(user) {\n    return this.http.post<any>(this.url + \"login\", user);\n  }\n\n  logoutUser() {\n    localStorage.clear();\n    this.router.navigate([\"/\"]);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem(\"token\");\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  getCurrentUser() {\n    return this.http.get<any>(\"http://localhost:5000/shop/current\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({ providedIn: \"root\" })\nexport class OrderService {\n  private url: string = \"http://localhost:5000/shop\";\n\n  private userOrder = new BehaviorSubject(null);\n  currentUserOrder = this.userOrder.asObservable();\n\n  private orderStatus = new BehaviorSubject(false);\n  currentOrderStatus = this.orderStatus.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  changeOrderStatus(status) {\n    this.orderStatus.next(status);\n  }\n\n  ordersDetails(orders) {\n    this.userOrder.next(orders);\n  }\n\n  getAllOrders() {\n    return this.http.get<any>(this.url + \"/orders\");\n  }\n\n  addProductToCart(user, product: any) {\n    return this.http.put<any>(this.url + `/cart/${user._id}/${product.id}`, { quantity: product.quantity });\n  }\n\n  removeProductFromCart(user, product: any) {\n    return this.http.put<any>(this.url + `/cart/delete/${user._id}/${product.productId}`, user._id);\n  }\n\n  emptyCart(user) {\n    return this.http.put<any>(this.url + `/empty-cart/${user._id}`, user._id);\n  }\n\n  revokeOrder(user) {\n    return this.http.put<any>(this.url + `/open-cart/${user._id}`, user._id);\n  }\n\n  initializeOrder(user) {\n    return this.http.put<any>(this.url + `/orders/${user._id}`, user._id);\n  }\n\n  addOrder(user, order) {\n    return this.http.post<any>(this.url + `/orders/${user._id}`, order);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ProductService {\n  private url = \"http://localhost:5000/shop\";\n\n  private products = new BehaviorSubject(null);\n  currentProducts = this.products.asObservable();\n\n  private product = new BehaviorSubject(null);\n  currentProduct = this.product.asObservable();\n\n  private categories = new BehaviorSubject(null);\n  currentCategories = this.categories.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getShopInventory() {\n    return this.http.get<any>(this.url + \"/info\");\n  }\n\n  displayedCategories(categories) {\n    this.categories.next(categories);\n  }\n\n  displayedProducts(products) {\n    this.products.next(products);\n  }\n\n  chosenProduct(product) {\n    this.product.next(product);\n  }\n\n  getAllProducts() {\n    return this.http.get<any>(this.url + \"/products\");\n  }\n\n  getAllCategories() {\n    return this.http.get<any>(this.url + \"/category\");\n  }\n\n  getProductsByCategory(categoryName) {\n    return this.http.get<any>(this.url + \"/category/\" + categoryName);\n  }\n\n  getProductsByName(productName) {\n    return this.http.get<any>(this.url + \"/search/\" + productName);\n  }\n\n  createProduct(newProduct) {\n    return this.http.post<any>(this.url, newProduct);\n  }\n\n  editProduct(productId, updatedProduct) {\n    return this.http.put<any>(this.url + \"/\" + productId, updatedProduct);\n  }\n\n  deleteProduct(productId) {\n    return this.http.delete<any>(this.url + \"/\" + productId);\n  }\n\n  createCategory(category) {\n    return this.http.post<any>(this.url + \"/category\", category);\n  }\n}\n","import { Injectable, Injector } from \"@angular/core\";\nimport { HttpInterceptor } from \"@angular/common/http\";\n// Services\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({ providedIn: \"root\" })\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n  intercept(req, next) {\n    let authService = this.injector.get(AuthService);\n    let tokenizedReq = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authService.getToken())\n    });\n    return next.handle(tokenizedReq);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}